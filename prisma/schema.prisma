generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
  // provider = "mysql"
  // url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(cuid())
  name        String
  username    String        @unique
  role        String
  email       String        @unique
  image       String?
  password    String
  Message     Message[]
  RoomMember  RoomMember[]
  MessageSeen MessageSeen[]
  tasks       Tasks[]
}

model Message {
  id        Int           @id @default(autoincrement())
  content   String
  createdAt DateTime      @default(now())
  authorId  String
  author    User          @relation(fields: [authorId], references: [id])
  roomId    String
  room      Room          @relation(fields: [roomId], references: [id])
  seenBy    MessageSeen[]
}

model Room {
  id          String        @id @default(cuid())
  name        String?
  image       String?
  messages    Message[]
  members     RoomMember[]
  MessageSeen MessageSeen[]
}

model RoomMember {
  roomId String
  room   Room   @relation(fields: [roomId], references: [id])
  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@id([roomId, userId])
}

model MessageSeen {
  messageId Int
  message   Message  @relation(fields: [messageId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  roomId    String
  room      Room     @relation(fields: [roomId], references: [id])
  updatedAt DateTime @default(now())
  seen      Boolean

  @@id([messageId, userId, roomId])
}

model Projects {
  id             String    @id @unique @default(cuid())
  name           String
  description    String
  tasks          Tasks[]
  completionDate DateTime?
  deadline       DateTime
  completed      Boolean   @default(false)
}

model Tasks {
  id             String    @id @unique @default(cuid())
  name           String
  description    String
  hours          Int
  members        User[]
  project        Projects? @relation(fields: [projectsId], references: [id])
  dueDate        DateTime
  completed      Boolean   @default(false)
  completionDate DateTime?
  manhours       Int
  projectsId     String?
}
